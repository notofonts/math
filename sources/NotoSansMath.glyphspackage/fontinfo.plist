{
.appVersion = "3324";
.formatVersion = 3;
classes = (
{
code = "# FIXME: NOTE: only handling [A-Z]script-math here, no boldscript, yet.
# FIXME:       On purpose, since those .uv001 boldscript glyphs don't exist, yet. For some future project.
Ascript-math
Bscript
Cscript-math
Dscript-math
Escript
Fscript
Gscript-math
Hscript
Iscript
Jscript-math
Kscript-math
Lscript
Mscript
Nscript-math
Oscript-math
Pscript-math
Qscript-math
Rscript
Sscript-math
Tscript-math
Uscript-math
Vscript-math
Wscript-math
Xscript-math
Yscript-math
Zscript-math
";
name = MathScriptUpper;
},
{
code = "Ascript-math.uv001
Bscript.uv001
Cscript-math.uv001
Dscript-math.uv001
Escript.uv001
Fscript.uv001
Gscript-math.uv001
Hscript.uv001
Iscript.uv001
Jscript-math.uv001
Kscript-math.uv001
Lscript.uv001
Mscript.uv001
Nscript-math.uv001
Oscript-math.uv001
Pscript-math.uv001
Qscript-math.uv001
Rscript.uv001
Sscript-math.uv001
Tscript-math.uv001
Uscript-math.uv001
Vscript-math.uv001
Wscript-math.uv001
Xscript-math.uv001
Yscript-math.uv001
Zscript-math.uv001
";
name = MathScriptUpperVS1;
},
{
code = "idotless
jdotless
i-fraktur.dtls
j-fraktur.dtls
#idotlessitalic-math
#jdotlessitalic-math
#ibold-math.dtls
imono-math.dtls
#isans-math.dtls
isansbold-math.dtls
isansbolditalic-math.dtls
isansitalic-math.dtls
iscript-math.dtls
#jbold-math.dtls
jmono-math.dtls
#jsans-math.dtls
jsansbold-math.dtls
jsansbolditalic-math.dtls
jsansitalic-math.dtls
jscript-math.dtls
idoubleStruck.dtls
jdoubleStruck.dtls
iitalicDoubleStruck.dtls
jitalicDoubleStruck.dtls
#ibolditalic-math.dtls
#jbolditalic-math.dtls
iBold-fraktur.dtls
jBold-fraktur.dtls
";
name = ijDotless;
},
{
code = "i
j
i-fraktur
j-fraktur
#iitalic-math
#jitalic-math
#ibold-math
imono-math
#isans-math
isansbold-math
isansbolditalic-math
isansitalic-math
iscript-math
#jbold-math
jmono-math
#jsans-math
jsansbold-math
jsansbolditalic-math
jsansitalic-math
jscript-math
idoubleStruck
jdoubleStruck
iitalicDoubleStruck
jitalicDoubleStruck
#ibolditalic-math
#jbolditalic-math
iBold-fraktur
jBold-fraktur
";
name = ij;
}
);
customParameters = (
{
name = glyphOrder;
value = (
.notdef,
.null,
CR,
space
);
},
{
name = fsType;
value = (
);
},
{
name = "Write DisplayStrings";
value = 0;
},
{
name = "Use Typo Metrics";
value = 1;
}
);
date = "2023-02-15 06:20:46 +0000";
familyName = "Noto Sans Math";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem math dflt;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature rtlm;
feature ss01;
feature ss02;
feature dtls;
feature ssty;
";
tag = aalt;
},
{
code = "lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb brevecomb breveinvertedcomb caroncomb circumflexcomb commaturnedabovecomb dbloverlinecomb dieresiscomb dotaccentcomb gbridgeabovecomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	lookupflag UseMarkFilteringSet @CombiningTopAccents;
	sub @ij' @CombiningTopAccents by @ijDotless;
} ccmp_Other_1;
";
tag = ccmp;
},
{
automatic = 1;
code = "sub partialdiff by partialdiff.rtlm;
sub partialdiffitalic-math by partialdiffitalic-math.rtlm;
sub partialdiffsansbold-math by partialdiffsansbold-math.rtlm;
sub partialdiffsansbolditalic-math by partialdiffsansbolditalic-math.rtlm;
sub risingDiagonal-math by risingDiagonal-math.rtlm;
sub fallingDiagonal-math by fallingDiagonal-math.rtlm;
sub integral by integral.rtlm;
sub dblintegral by dblintegral.rtlm;
sub tripleintegral by tripleintegral.rtlm;
sub quadrupleintegral by quadrupleintegral.rtlm;
sub contourintegral by contourintegral.rtlm;
sub surfaceintegral by surfaceintegral.rtlm;
sub volumeintegral by volumeintegral.rtlm;
sub clockwiseintegral by clockwiseintegral.rtlm;
sub clockwisecontourintegral by clockwisecontourintegral.rtlm;
sub anticlockwisecontourintegral by anticlockwisecontourintegral.rtlm;
sub finitePartIntegral by finitePartIntegral.rtlm;
sub doublestrokeintegral by doublestrokeintegral.rtlm;
sub slashintegral by slashintegral.rtlm;
sub circulationfunction by circulationfunction.rtlm;
sub anticlockwiseintegral by anticlockwiseintegral.rtlm;
sub rectangularlineintegral by rectangularlineintegral.rtlm;
sub semicircularlineintegral by semicircularlineintegral.rtlm;
sub nopolelineintegral by nopolelineintegral.rtlm;
sub pointoperatorintegral by pointoperatorintegral.rtlm;
sub quaternionintegral by quaternionintegral.rtlm;
sub leftarrowhookintegral by leftarrowhookintegral.rtlm;
sub timesintegral by timesintegral.rtlm;
sub intersectionintegral by intersectionintegral.rtlm;
sub unionintegral by unionintegral.rtlm;
sub overbarintegral by overbarintegral.rtlm;
sub underbarintegral by underbarintegral.rtlm;
sub summation by summation.rtlm;
sub modulotwosum by modulotwosum.rtlm;
sub summationintegral by summationintegral.rtlm;
sub summationdoublestruck by summationdoublestruck.rtlm;
sub narylefttriangle by narylefttriangle.rtlm;
sub znotationschemacomposition by znotationschemacomposition.rtlm;
sub znotationschemapiping by znotationschemapiping.rtlm;
sub integral.b by integral.b.rtlm;
sub integral.t by integral.t.rtlm;
sub integral.x by integral.x.rtlm;
sub radical by radical.rtlm;
sub cuberoot by cuberoot.rtlm;
sub fourthroot by fourthroot.rtlm;
sub longDivision by longDivision.rtlm;
sub acuteAngle by acuteAngle.rtlm;
sub allequal by allequal.rtlm;
sub almostEqualToWithCircumflexAccent by almostEqualToWithCircumflexAccent.rtlm;
sub almostequalorequalto by almostequalorequalto.rtlm;
sub angle by angle.rtlm;
sub angleWithSInside by angleWithSInside.rtlm;
sub angleWithUnderbar by angleWithUnderbar.rtlm;
sub approximatelyEqualOrEqualTo by approximatelyEqualOrEqualTo.rtlm;
sub approximatelybutnotactuallyequalto by approximatelybutnotactuallyequalto.rtlm;
sub circleSmallCircleRight by circleSmallCircleRight.rtlm;
sub circleTwoHorizontalStrokesRight by circleTwoHorizontalStrokesRight.rtlm;
sub complement by complement.rtlm;
sub congruent by congruent.rtlm;
sub congruentWithDotAbove by congruentWithDotAbove.rtlm;
sub doesNotDivideWithReversedNegationSlash by doesNotDivideWithReversedNegationSlash.rtlm;
sub doesnotdivide by doesnotdivide.rtlm;
sub doesnotforce by doesnotforce.rtlm;
sub doesnotprove by doesnotprove.rtlm;
sub doubleColonEqual by doubleColonEqual.rtlm;
sub doubleNestedLessThanWithUnderbar by doubleNestedLessThanWithUnderbar.rtlm;
sub doubleSolidusOperator by doubleSolidusOperator.rtlm;
sub downTriangleWithLeftHalfBlack by downTriangleWithLeftHalfBlack.rtlm;
sub downTriangleWithRightHalfBlack by downTriangleWithRightHalfBlack.rtlm;
sub elementofdotabove by elementofdotabove.rtlm;
sub elementoftwohorizontalstrokes by elementoftwohorizontalstrokes.rtlm;
sub elementofunderbar by elementofunderbar.rtlm;
sub equalsSignAboveTildeOperator by equalsSignAboveTildeOperator.rtlm;
sub equalsSignAndSlantedParallel by equalsSignAndSlantedParallel.rtlm;
sub equalsSignAndSlantedParallelWithTildeAbove by equalsSignAndSlantedParallelWithTildeAbove.rtlm;
sub excess by excess.rtlm;
sub existential by existential.rtlm;
sub forking by forking.rtlm;
sub greaterThanAboveSimilarAboveLessThan by greaterThanAboveSimilarAboveLessThan.rtlm;
sub greaterThanAboveSimilarOrEqual by greaterThanAboveSimilarOrEqual.rtlm;
sub greaterThanAndNotApproximate by greaterThanAndNotApproximate.rtlm;
sub greaterThanAndSingleLineNotEqualTo by greaterThanAndSingleLineNotEqualTo.rtlm;
sub greaterThanOrApproximate by greaterThanOrApproximate.rtlm;
sub greaterThanWithQuestionMarkAbove by greaterThanWithQuestionMarkAbove.rtlm;
sub homothetic by homothetic.rtlm;
sub identicalToAndSlantedParallel by identicalToAndSlantedParallel.rtlm;
sub incompleteInfinity by incompleteInfinity.rtlm;
sub increasesAs by increasesAs.rtlm;
sub invertedlazys by invertedlazys.rtlm;
sub lessThanAboveSimilarAboveGreaterThan by lessThanAboveSimilarAboveGreaterThan.rtlm;
sub lessThanAboveSimilarOrEqual by lessThanAboveSimilarOrEqual.rtlm;
sub lessThanAndNotApproximate by lessThanAndNotApproximate.rtlm;
sub lessThanAndSingleLineNotEqualTo by lessThanAndSingleLineNotEqualTo.rtlm;
sub lessThanOrApproximate by lessThanOrApproximate.rtlm;
sub lessThanWithQuestionMarkAbove by lessThanWithQuestionMarkAbove.rtlm;
sub lessorequivalent by lessorequivalent.rtlm;
sub longDashFromLeftMemberOfDoubleVertical by longDashFromLeftMemberOfDoubleVertical.rtlm;
sub lowerRightCornerWithDot by lowerRightCornerWithDot.rtlm;
sub measuredAngleWithOpenArmEndingInArrowPointingDownAndLeft by measuredAngleWithOpenArmEndingInArrowPointingDownAndLeft.rtlm;
sub measuredAngleOpeningLeft by measuredAngleOpeningLeft.rtlm;
sub measuredAngleWithOpenArmEndingInArrowPointingDownAndRight by measuredAngleWithOpenArmEndingInArrowPointingDownAndRight.rtlm;
sub measuredAngleWithOpenArmEndingInArrowPointingLeftAndDown by measuredAngleWithOpenArmEndingInArrowPointingLeftAndDown.rtlm;
sub measuredAngleWithOpenArmEndingInArrowPointingLeftAndUp by measuredAngleWithOpenArmEndingInArrowPointingLeftAndUp.rtlm;
sub measuredAngleWithOpenArmEndingInArrowPointingRightAndDown by measuredAngleWithOpenArmEndingInArrowPointingRightAndDown.rtlm;
sub measuredAngleWithOpenArmEndingInArrowPointingRightAndUp by measuredAngleWithOpenArmEndingInArrowPointingRightAndUp.rtlm;
sub measuredAngleWithOpenArmEndingInArrowPointingUpAndLeft by measuredAngleWithOpenArmEndingInArrowPointingUpAndLeft.rtlm;
sub measuredAngleWithOpenArmEndingInArrowPointingUpAndRight by measuredAngleWithOpenArmEndingInArrowPointingUpAndRight.rtlm;
sub measuredRightAngleWithDot by measuredRightAngleWithDot.rtlm;
sub measuredangle by measuredangle.rtlm;
sub minusSignWithCommaAbove by minusSignWithCommaAbove.rtlm;
sub minustilde by minustilde.rtlm;
sub models by models.rtlm;
sub multimap by multimap.rtlm;
sub multiset by multiset.rtlm;
sub negateddoubleverticalbardoublerightturnstile by negateddoubleverticalbardoublerightturnstile.rtlm;
sub neitherapproximatelynoractuallyequalto by neitherapproximatelynoractuallyequalto.rtlm;
sub notalmostequalto by notalmostequalto.rtlm;
sub notasymptoticallyequalto by notasymptoticallyequalto.rtlm;
sub notidentical by notidentical.rtlm;
sub notparallel by notparallel.rtlm;
sub notsimilar by notsimilar.rtlm;
sub nottrue by nottrue.rtlm;
sub obliqueAngleOpeningDown by obliqueAngleOpeningDown.rtlm;
sub obliqueAngleOpeningUp by obliqueAngleOpeningUp.rtlm;
sub notequal by notequal.rtlm;
sub approxequal by approxequal.rtlm;
sub parallelWithTildeOperator by parallelWithTildeOperator.rtlm;
sub plusSignWithTildeAbove by plusSignWithTildeAbove.rtlm;
sub plusSignWithTildeBelow by plusSignWithTildeBelow.rtlm;
sub precedesAboveAlmostEqualTo by precedesAboveAlmostEqualTo.rtlm;
sub precedesAboveNotAlmostEqualTo by precedesAboveNotAlmostEqualTo.rtlm;
sub precedesAboveNotEqualTo by precedesAboveNotEqualTo.rtlm;
sub precedesAboveSingleLineNotEqualTo by precedesAboveSingleLineNotEqualTo.rtlm;
sub proportional by proportional.rtlm;
sub questionedequalto by questionedequalto.rtlm;
sub reverseSolidusWithHorizontalStroke by reverseSolidusWithHorizontalStroke.rtlm;
sub reversedAngle by reversedAngle.rtlm;
sub reversedAngleWithUnderbar by reversedAngleWithUnderbar.rtlm;
sub rightAngleVariantWithSquare by rightAngleVariantWithSquare.rtlm;
sub rightTriangleAboveLeftTriangle by rightTriangleAboveLeftTriangle.rtlm;
sub rightanglearc by rightanglearc.rtlm;
sub righttriangle by righttriangle.rtlm;
sub ruleDelayed by ruleDelayed.rtlm;
sub setminus by setminus.rtlm;
sub similarAboveGreaterThanAboveEqualsSign by similarAboveGreaterThanAboveEqualsSign.rtlm;
sub similarAboveLessThanAboveEqualsSign by similarAboveLessThanAboveEqualsSign.rtlm;
sub similarMinusSimilar by similarMinusSimilar.rtlm;
sub similarOrGreaterThan by similarOrGreaterThan.rtlm;
sub similarOrLessThan by similarOrLessThan.rtlm;
sub sinewave by sinewave.rtlm;
sub slopingLargeAnd by slopingLargeAnd.rtlm;
sub slopingLargeOr by slopingLargeOr.rtlm;
sub solidusWithOverbar by solidusWithOverbar.rtlm;
sub sphericalAngleOpeningLeft by sphericalAngleOpeningLeft.rtlm;
sub sphericalangle by sphericalangle.rtlm;
sub subsetOfAboveAlmostEqualTo by subsetOfAboveAlmostEqualTo.rtlm;
sub subsetOfAboveNotEqualTo by subsetOfAboveNotEqualTo.rtlm;
sub subsetOfAboveTildeOperator by subsetOfAboveTildeOperator.rtlm;
sub succeedsAboveAlmostEqualTo by succeedsAboveAlmostEqualTo.rtlm;
sub succeedsAboveNotAlmostEqualTo by succeedsAboveNotAlmostEqualTo.rtlm;
sub succeedsAboveNotEqualTo by succeedsAboveNotEqualTo.rtlm;
sub succeedsAboveSingleLineNotEqualTo by succeedsAboveSingleLineNotEqualTo.rtlm;
sub supersetOfAboveAlmostEqualTo by supersetOfAboveAlmostEqualTo.rtlm;
sub supersetOfAboveNotEqualTo by supersetOfAboveNotEqualTo.rtlm;
sub supersetOfAboveTildeOperator by supersetOfAboveTildeOperator.rtlm;
sub theredoesnotexist by theredoesnotexist.rtlm;
sub threeDimensionalAngle by threeDimensionalAngle.rtlm;
sub tildeOperatorWithDotAbove by tildeOperatorWithDotAbove.rtlm;
sub tildeOperatorWithRisingDots by tildeOperatorWithRisingDots.rtlm;
sub tripleSolidusBinaryRelation by tripleSolidusBinaryRelation.rtlm;
sub tripletilde by tripletilde.rtlm;
sub tripleverticalbarrightturnstile by tripleverticalbarrightturnstile.rtlm;
sub turnedAngle by turnedAngle.rtlm;
sub twoJoinedSquares by twoJoinedSquares.rtlm;
sub upperLeftCornerWithDot by upperLeftCornerWithDot.rtlm;
sub verticalBarTripleRightTurnstile by verticalBarTripleRightTurnstile.rtlm;
sub wreathproduct by wreathproduct.rtlm;
sub zNotationRelationalComposition by zNotationRelationalComposition.rtlm;
sub zNotationSchemaProjection by zNotationSchemaProjection.rtlm;
sub znotationbagmembership by znotationbagmembership.rtlm;
sub leftMultimap by leftMultimap.rtlm;
sub orthogonal by orthogonal.rtlm;
";
tag = rtlm;
},
{
code = "# FIXME:TODO:REVIEW: for completeness toward end of design -- make sure to update classes to match
sub @MathScriptUpper by @MathScriptUpperVS1;
";
labels = (
{
language = dflt;
value = "Chancery Style";
}
);
notes = "An alternate way to access the Chancery Style variants of the script-math glyphs.";
tag = ss01;
},
{
automatic = 1;
code = "sub integral by integral.ss02;
sub dblintegral by dblintegral.ss02;
sub tripleintegral by tripleintegral.ss02;
sub quadrupleintegral by quadrupleintegral.ss02;
sub contourintegral by contourintegral.ss02;
sub surfaceintegral by surfaceintegral.ss02;
sub volumeintegral by volumeintegral.ss02;
sub clockwiseintegral by clockwiseintegral.ss02;
sub clockwisecontourintegral by clockwisecontourintegral.ss02;
sub anticlockwisecontourintegral by anticlockwisecontourintegral.ss02;
sub finitePartIntegral by finitePartIntegral.ss02;
sub doublestrokeintegral by doublestrokeintegral.ss02;
sub slashintegral by slashintegral.ss02;
sub circulationfunction by circulationfunction.ss02;
sub anticlockwiseintegral by anticlockwiseintegral.ss02;
sub rectangularlineintegral by rectangularlineintegral.ss02;
sub semicircularlineintegral by semicircularlineintegral.ss02;
sub nopolelineintegral by nopolelineintegral.ss02;
sub pointoperatorintegral by pointoperatorintegral.ss02;
sub quaternionintegral by quaternionintegral.ss02;
sub leftarrowhookintegral by leftarrowhookintegral.ss02;
sub timesintegral by timesintegral.ss02;
sub intersectionintegral by intersectionintegral.ss02;
sub unionintegral by unionintegral.ss02;
sub overbarintegral by overbarintegral.ss02;
sub underbarintegral by underbarintegral.ss02;
sub summationintegral by summationintegral.ss02;
sub integral.rtlm by integral.rtlm.ss02;
sub dblintegral.rtlm by dblintegral.rtlm.ss02;
sub tripleintegral.rtlm by tripleintegral.rtlm.ss02;
sub quadrupleintegral.rtlm by quadrupleintegral.rtlm.ss02;
sub contourintegral.rtlm by contourintegral.rtlm.ss02;
sub surfaceintegral.rtlm by surfaceintegral.rtlm.ss02;
sub volumeintegral.rtlm by volumeintegral.rtlm.ss02;
sub clockwiseintegral.rtlm by clockwiseintegral.rtlm.ss02;
sub clockwisecontourintegral.rtlm by clockwisecontourintegral.rtlm.ss02;
sub anticlockwisecontourintegral.rtlm by anticlockwisecontourintegral.rtlm.ss02;
sub finitePartIntegral.rtlm by finitePartIntegral.rtlm.ss02;
sub doublestrokeintegral.rtlm by doublestrokeintegral.rtlm.ss02;
sub slashintegral.rtlm by slashintegral.rtlm.ss02;
sub circulationfunction.rtlm by circulationfunction.rtlm.ss02;
sub anticlockwiseintegral.rtlm by anticlockwiseintegral.rtlm.ss02;
sub rectangularlineintegral.rtlm by rectangularlineintegral.rtlm.ss02;
sub semicircularlineintegral.rtlm by semicircularlineintegral.rtlm.ss02;
sub nopolelineintegral.rtlm by nopolelineintegral.rtlm.ss02;
sub pointoperatorintegral.rtlm by pointoperatorintegral.rtlm.ss02;
sub quaternionintegral.rtlm by quaternionintegral.rtlm.ss02;
sub leftarrowhookintegral.rtlm by leftarrowhookintegral.rtlm.ss02;
sub timesintegral.rtlm by timesintegral.rtlm.ss02;
sub intersectionintegral.rtlm by intersectionintegral.rtlm.ss02;
sub unionintegral.rtlm by unionintegral.rtlm.ss02;
sub overbarintegral.rtlm by overbarintegral.rtlm.ss02;
sub underbarintegral.rtlm by underbarintegral.rtlm.ss02;
sub summationintegral.rtlm by summationintegral.rtlm.ss02;
";
labels = (
{
language = dflt;
value = "Straight integrals";
}
);
tag = ss02;
},
{
automatic = 1;
code = "sub i by idotless;
sub j by jdotless;
sub isansitalic-math by isansitalic-math.dtls;
sub jsansitalic-math by jsansitalic-math.dtls;
sub i-fraktur by i-fraktur.dtls;
sub j-fraktur by j-fraktur.dtls;
sub iBold-fraktur by iBold-fraktur.dtls;
sub jBold-fraktur by jBold-fraktur.dtls;
sub imono-math by imono-math.dtls;
sub jmono-math by jmono-math.dtls;
sub isansitalic-math by isansitalic-math.dtls;
sub jsansitalic-math by jsansitalic-math.dtls;
sub isansbold-math by isansbold-math.dtls;
sub jsansbold-math by jsansbold-math.dtls;
sub isansbolditalic-math by isansbolditalic-math.dtls;
sub jsansbolditalic-math by jsansbolditalic-math.dtls;
sub iscript-math by iscript-math.dtls;
sub jscript-math by jscript-math.dtls;
sub idoubleStruck by idoubleStruck.dtls;
sub jdoubleStruck by jdoubleStruck.dtls;
sub iitalicDoubleStruck by iitalicDoubleStruck.dtls;
sub jitalicDoubleStruck by jitalicDoubleStruck.dtls;
";
tag = dtls;
},
{
automatic = 1;
code = "sub A from [A.ssty1 A.ssty2];
sub B from [B.ssty1 B.ssty2];
sub C from [C.ssty1 C.ssty2];
sub D from [D.ssty1 D.ssty2];
sub E from [E.ssty1 E.ssty2];
sub F from [F.ssty1 F.ssty2];
sub G from [G.ssty1 G.ssty2];
sub H from [H.ssty1 H.ssty2];
sub I from [I.ssty1 I.ssty2];
sub J from [J.ssty1 J.ssty2];
sub K from [K.ssty1 K.ssty2];
sub L from [L.ssty1 L.ssty2];
sub M from [M.ssty1 M.ssty2];
sub N from [N.ssty1 N.ssty2];
sub O from [O.ssty1 O.ssty2];
sub P from [P.ssty1 P.ssty2];
sub Q from [Q.ssty1 Q.ssty2];
sub R from [R.ssty1 R.ssty2];
sub S from [S.ssty1 S.ssty2];
sub T from [T.ssty1 T.ssty2];
sub U from [U.ssty1 U.ssty2];
sub V from [V.ssty1 V.ssty2];
sub W from [W.ssty1 W.ssty2];
sub X from [X.ssty1 X.ssty2];
sub Y from [Y.ssty1 Y.ssty2];
sub Z from [Z.ssty1 Z.ssty2];
sub a from [a.ssty1 a.ssty2];
sub b from [b.ssty1 b.ssty2];
sub c from [c.ssty1 c.ssty2];
sub d from [d.ssty1 d.ssty2];
sub e from [e.ssty1 e.ssty2];
sub f from [f.ssty1 f.ssty2];
sub g from [g.ssty1 g.ssty2];
sub h from [h.ssty1 h.ssty2];
sub i from [i.ssty1 i.ssty2];
sub idotless from [idotless.ssty1 idotless.ssty2];
sub j from [j.ssty1 j.ssty2];
sub jdotless from [jdotless.ssty1 jdotless.ssty2];
sub k from [k.ssty1 k.ssty2];
sub l from [l.ssty1 l.ssty2];
sub m from [m.ssty1 m.ssty2];
sub n from [n.ssty1 n.ssty2];
sub o from [o.ssty1 o.ssty2];
sub p from [p.ssty1 p.ssty2];
sub q from [q.ssty1 q.ssty2];
sub r from [r.ssty1 r.ssty2];
sub s from [s.ssty1 s.ssty2];
sub t from [t.ssty1 t.ssty2];
sub u from [u.ssty1 u.ssty2];
sub v from [v.ssty1 v.ssty2];
sub w from [w.ssty1 w.ssty2];
sub x from [x.ssty1 x.ssty2];
sub y from [y.ssty1 y.ssty2];
sub z from [z.ssty1 z.ssty2];
sub Alpha from [Alpha.ssty1 Alpha.ssty2];
sub Beta from [Beta.ssty1 Beta.ssty2];
sub Gamma from [Gamma.ssty1 Gamma.ssty2];
sub Delta from [Delta.ssty1 Delta.ssty2];
sub Epsilon from [Epsilon.ssty1 Epsilon.ssty2];
sub Zeta from [Zeta.ssty1 Zeta.ssty2];
sub Eta from [Eta.ssty1 Eta.ssty2];
sub Theta from [Theta.ssty1 Theta.ssty2];
sub Iota from [Iota.ssty1 Iota.ssty2];
sub Kappa from [Kappa.ssty1 Kappa.ssty2];
sub Lambda from [Lambda.ssty1 Lambda.ssty2];
sub Mu from [Mu.ssty1 Mu.ssty2];
sub Nu from [Nu.ssty1 Nu.ssty2];
sub Xi from [Xi.ssty1 Xi.ssty2];
sub Omicron from [Omicron.ssty1 Omicron.ssty2];
sub Pi from [Pi.ssty1 Pi.ssty2];
sub Rho from [Rho.ssty1 Rho.ssty2];
sub Sigma from [Sigma.ssty1 Sigma.ssty2];
sub Tau from [Tau.ssty1 Tau.ssty2];
sub Upsilon from [Upsilon.ssty1 Upsilon.ssty2];
sub Phi from [Phi.ssty1 Phi.ssty2];
sub Chi from [Chi.ssty1 Chi.ssty2];
sub Psi from [Psi.ssty1 Psi.ssty2];
sub Omega from [Omega.ssty1 Omega.ssty2];
sub Nabla from [Nabla.ssty1 Nabla.ssty2];
sub alpha from [alpha.ssty1 alpha.ssty2];
sub beta from [beta.ssty1 beta.ssty2];
sub gamma from [gamma.ssty1 gamma.ssty2];
sub delta from [delta.ssty1 delta.ssty2];
sub epsilon from [epsilon.ssty1 epsilon.ssty2];
sub zeta from [zeta.ssty1 zeta.ssty1];
sub eta from [eta.ssty1 eta.ssty2];
sub theta from [theta.ssty1 theta.ssty2];
sub iota from [iota.ssty1 iota.ssty2];
sub kappa from [kappa.ssty1 kappa.ssty2];
sub lambda from [lambda.ssty1 lambda.ssty2];
sub mu from [mu.ssty1 mu.ssty2];
sub nu from [nu.ssty1 nu.ssty2];
sub xi from [xi.ssty1 xi.ssty2];
sub omicron from [omicron.ssty1 omicron.ssty2];
sub pi from [pi.ssty1 pi.ssty2];
sub rho from [rho.ssty1 rho.ssty2];
sub sigmafinal from [sigmafinal.ssty1 sigmafinal.ssty2];
sub sigma from [sigma.ssty1 sigma.ssty2];
sub tau from [tau.ssty1 tau.ssty2];
sub upsilon from [upsilon.ssty1 upsilon.ssty2];
sub phi from [phi.ssty1 phi.ssty2];
sub chi from [chi.ssty1 chi.ssty2];
sub psi from [psi.ssty1 psi.ssty2];
sub omega from [omega.ssty1 omega.ssty2];
sub partialdiff from [partialdiff.ssty1 partialdiff.ssty2];
sub A-fraktur from [A-fraktur.ssty1 A-fraktur.ssty2];
sub B-fraktur from [B-fraktur.ssty1 B-fraktur.ssty2];
sub C-fraktur from [C-fraktur.ssty1 C-fraktur.ssty2];
sub D-fraktur from [D-fraktur.ssty1 D-fraktur.ssty2];
sub E-fraktur from [E-fraktur.ssty1 E-fraktur.ssty2];
sub F-fraktur from [F-fraktur.ssty1 F-fraktur.ssty2];
sub G-fraktur from [G-fraktur.ssty1 G-fraktur.ssty2];
sub H-fraktur from [H-fraktur.ssty1 H-fraktur.ssty2];
sub I-fraktur from [I-fraktur.ssty1 I-fraktur.ssty2];
sub J-fraktur from [J-fraktur.ssty1 J-fraktur.ssty2];
sub K-fraktur from [K-fraktur.ssty1 K-fraktur.ssty2];
sub L-fraktur from [L-fraktur.ssty1 L-fraktur.ssty2];
sub M-fraktur from [M-fraktur.ssty1 M-fraktur.ssty2];
sub N-fraktur from [N-fraktur.ssty1 N-fraktur.ssty2];
sub O-fraktur from [O-fraktur.ssty1 O-fraktur.ssty2];
sub P-fraktur from [P-fraktur.ssty1 P-fraktur.ssty2];
sub Q-fraktur from [Q-fraktur.ssty1 Q-fraktur.ssty2];
sub R-fraktur from [R-fraktur.ssty1 R-fraktur.ssty2];
sub S-fraktur from [S-fraktur.ssty1 S-fraktur.ssty2];
sub T-fraktur from [T-fraktur.ssty1 T-fraktur.ssty2];
sub U-fraktur from [U-fraktur.ssty1 U-fraktur.ssty2];
sub V-fraktur from [V-fraktur.ssty1 V-fraktur.ssty2];
sub W-fraktur from [W-fraktur.ssty1 W-fraktur.ssty2];
sub X-fraktur from [X-fraktur.ssty1 X-fraktur.ssty2];
sub Y-fraktur from [Y-fraktur.ssty1 Y-fraktur.ssty2];
sub Z-fraktur from [Z-fraktur.ssty1 Z-fraktur.ssty2];
sub a-fraktur from [a-fraktur.ssty1 a-fraktur.ssty2];
sub b-fraktur from [b-fraktur.ssty1 b-fraktur.ssty2];
sub c-fraktur from [c-fraktur.ssty1 c-fraktur.ssty2];
sub d-fraktur from [d-fraktur.ssty1 d-fraktur.ssty2];
sub e-fraktur from [e-fraktur.ssty1 e-fraktur.ssty2];
sub f-fraktur from [f-fraktur.ssty1 f-fraktur.ssty2];
sub g-fraktur from [g-fraktur.ssty1 g-fraktur.ssty2];
sub h-fraktur from [h-fraktur.ssty1 h-fraktur.ssty2];
sub i-fraktur from [i-fraktur.ssty1 i-fraktur.ssty2];
sub i-fraktur.dtls from [i-fraktur.dtls.ssty1 i-fraktur.dtls.ssty2];
sub j-fraktur from [j-fraktur.ssty1 j-fraktur.ssty2];
sub j-fraktur.dtls from [j-fraktur.dtls.ssty1 j-fraktur.dtls.ssty2];
sub k-fraktur from [k-fraktur.ssty1 k-fraktur.ssty2];
sub l-fraktur from [l-fraktur.ssty1 l-fraktur.ssty2];
sub m-fraktur from [m-fraktur.ssty1 m-fraktur.ssty2];
sub n-fraktur from [n-fraktur.ssty1 n-fraktur.ssty2];
sub o-fraktur from [o-fraktur.ssty1 o-fraktur.ssty2];
sub p-fraktur from [p-fraktur.ssty1 p-fraktur.ssty2];
sub q-fraktur from [q-fraktur.ssty1 q-fraktur.ssty2];
sub r-fraktur from [r-fraktur.ssty1 r-fraktur.ssty2];
sub s-fraktur from [s-fraktur.ssty1 s-fraktur.ssty2];
sub t-fraktur from [t-fraktur.ssty1 t-fraktur.ssty2];
sub u-fraktur from [u-fraktur.ssty1 u-fraktur.ssty2];
sub v-fraktur from [v-fraktur.ssty1 v-fraktur.ssty2];
sub w-fraktur from [w-fraktur.ssty1 w-fraktur.ssty2];
sub x-fraktur from [x-fraktur.ssty1 x-fraktur.ssty2];
sub y-fraktur from [y-fraktur.ssty1 y-fraktur.ssty2];
sub z-fraktur from [z-fraktur.ssty1 z-fraktur.ssty2];
sub Asansitalic-math from [Asansitalic-math.ssty1 Asansitalic-math.ssty2];
sub Bsansitalic-math from [Bsansitalic-math.ssty1 Bsansitalic-math.ssty2];
sub Csansitalic-math from [Csansitalic-math.ssty1 Csansitalic-math.ssty2];
sub Dsansitalic-math from [Dsansitalic-math.ssty1 Dsansitalic-math.ssty2];
sub Esansitalic-math from [Esansitalic-math.ssty1 Esansitalic-math.ssty2];
sub Fsansitalic-math from [Fsansitalic-math.ssty1 Fsansitalic-math.ssty2];
sub Gsansitalic-math from [Gsansitalic-math.ssty1 Gsansitalic-math.ssty2];
sub Hsansitalic-math from [Hsansitalic-math.ssty1 Hsansitalic-math.ssty2];
sub Isansitalic-math from [Isansitalic-math.ssty1 Isansitalic-math.ssty2];
sub Jsansitalic-math from [Jsansitalic-math.ssty1 Jsansitalic-math.ssty2];
sub Ksansitalic-math from [Ksansitalic-math.ssty1 Ksansitalic-math.ssty2];
sub Lsansitalic-math from [Lsansitalic-math.ssty1 Lsansitalic-math.ssty2];
sub Msansitalic-math from [Msansitalic-math.ssty1 Msansitalic-math.ssty2];
sub Nsansitalic-math from [Nsansitalic-math.ssty1 Nsansitalic-math.ssty2];
sub Osansitalic-math from [Osansitalic-math.ssty1 Osansitalic-math.ssty2];
sub Psansitalic-math from [Psansitalic-math.ssty1 Psansitalic-math.ssty2];
sub Qsansitalic-math from [Qsansitalic-math.ssty1 Qsansitalic-math.ssty2];
sub Rsansitalic-math from [Rsansitalic-math.ssty1 Rsansitalic-math.ssty2];
sub Ssansitalic-math from [Ssansitalic-math.ssty1 Ssansitalic-math.ssty2];
sub Tsansitalic-math from [Tsansitalic-math.ssty1 Tsansitalic-math.ssty2];
sub Usansitalic-math from [Usansitalic-math.ssty1 Usansitalic-math.ssty2];
sub Vsansitalic-math from [Vsansitalic-math.ssty1 Vsansitalic-math.ssty2];
sub Wsansitalic-math from [Wsansitalic-math.ssty1 Wsansitalic-math.ssty2];
sub Xsansitalic-math from [Xsansitalic-math.ssty1 Xsansitalic-math.ssty2];
sub Ysansitalic-math from [Ysansitalic-math.ssty1 Ysansitalic-math.ssty2];
sub Zsansitalic-math from [Zsansitalic-math.ssty1 Zsansitalic-math.ssty2];
sub Alphaitalic-math from [Alphaitalic-math.ssty1 Alphaitalic-math.ssty2];
sub Betaitalic-math from [Betaitalic-math.ssty1 Betaitalic-math.ssty2];
sub Gammaitalic-math from [Gammaitalic-math.ssty1 Gammaitalic-math.ssty2];
sub Deltaitalic-math from [Deltaitalic-math.ssty1 Deltaitalic-math.ssty2];
sub Epsilonitalic-math from [Epsilonitalic-math.ssty1 Epsilonitalic-math.ssty2];
sub Zetaitalic-math from [Zetaitalic-math.ssty1 Zetaitalic-math.ssty2];
sub Etaitalic-math from [Etaitalic-math.ssty1 Etaitalic-math.ssty2];
sub Thetaitalic-math from [Thetaitalic-math.ssty1 Thetaitalic-math.ssty2];
sub Iotaitalic-math from [Iotaitalic-math.ssty1 Iotaitalic-math.ssty2];
sub Kappaitalic-math from [Kappaitalic-math.ssty1 Kappaitalic-math.ssty2];
sub Lambdaitalic-math from [Lambdaitalic-math.ssty1 Lambdaitalic-math.ssty2];
sub Muitalic-math from [Muitalic-math.ssty1 Muitalic-math.ssty2];
sub Nuitalic-math from [Nuitalic-math.ssty1 Nuitalic-math.ssty2];
sub Xiitalic-math from [Xiitalic-math.ssty1 Xiitalic-math.ssty2];
sub Omicronitalic-math from [Omicronitalic-math.ssty1 Omicronitalic-math.ssty2];
sub Piitalic-math from [Piitalic-math.ssty1 Piitalic-math.ssty2];
sub Rhoitalic-math from [Rhoitalic-math.ssty1 Rhoitalic-math.ssty2];
sub Sigmaitalic-math from [Sigmaitalic-math.ssty1 Sigmaitalic-math.ssty2];
sub Tauitalic-math from [Tauitalic-math.ssty1 Tauitalic-math.ssty2];
sub Upsilonitalic-math from [Upsilonitalic-math.ssty1 Upsilonitalic-math.ssty2];
sub Phiitalic-math from [Phiitalic-math.ssty1 Phiitalic-math.ssty2];
sub Chiitalic-math from [Chiitalic-math.ssty1 Chiitalic-math.ssty2];
sub Psiitalic-math from [Psiitalic-math.ssty1 Psiitalic-math.ssty2];
sub Omegaitalic-math from [Omegaitalic-math.ssty1 Omegaitalic-math.ssty2];
sub Nablaitalic-math from [Nablaitalic-math.ssty1 Nablaitalic-math.ssty2];
sub asansitalic-math from [asansitalic-math.ssty1 asansitalic-math.ssty2];
sub bsansitalic-math from [bsansitalic-math.ssty1 bsansitalic-math.ssty2];
sub csansitalic-math from [csansitalic-math.ssty1 csansitalic-math.ssty2];
sub dsansitalic-math from [dsansitalic-math.ssty1 dsansitalic-math.ssty2];
sub esansitalic-math from [esansitalic-math.ssty1 esansitalic-math.ssty2];
sub fsansitalic-math from [fsansitalic-math.ssty1 fsansitalic-math.ssty2];
sub gsansitalic-math from [gsansitalic-math.ssty1 gsansitalic-math.ssty2];
sub hsansitalic-math from [hsansitalic-math.ssty1 hsansitalic-math.ssty2];
sub isansitalic-math from [isansitalic-math.ssty1 isansitalic-math.ssty2];
sub isansitalic-math.dtls from [isansitalic-math.dtls.ssty1 isansitalic-math.dtls.ssty2];
sub jsansitalic-math from [jsansitalic-math.ssty1 jsansitalic-math.ssty2];
sub jsansitalic-math.dtls from [jsansitalic-math.dtls.ssty1 jsansitalic-math.dtls.ssty2];
sub ksansitalic-math from [ksansitalic-math.ssty1 ksansitalic-math.ssty2];
sub lsansitalic-math from [lsansitalic-math.ssty1 lsansitalic-math.ssty2];
sub msansitalic-math from [msansitalic-math.ssty1 msansitalic-math.ssty2];
sub nsansitalic-math from [nsansitalic-math.ssty1 nsansitalic-math.ssty2];
sub osansitalic-math from [osansitalic-math.ssty1 osansitalic-math.ssty2];
sub psansitalic-math from [psansitalic-math.ssty1 psansitalic-math.ssty2];
sub qsansitalic-math from [qsansitalic-math.ssty1 qsansitalic-math.ssty2];
sub rsansitalic-math from [rsansitalic-math.ssty1 rsansitalic-math.ssty2];
sub ssansitalic-math from [ssansitalic-math.ssty1 ssansitalic-math.ssty2];
sub tsansitalic-math from [tsansitalic-math.ssty1 tsansitalic-math.ssty2];
sub usansitalic-math from [usansitalic-math.ssty1 usansitalic-math.ssty2];
sub vsansitalic-math from [vsansitalic-math.ssty1 vsansitalic-math.ssty2];
sub wsansitalic-math from [wsansitalic-math.ssty1 wsansitalic-math.ssty2];
sub xsansitalic-math from [xsansitalic-math.ssty1 xsansitalic-math.ssty2];
sub ysansitalic-math from [ysansitalic-math.ssty1 ysansitalic-math.ssty2];
sub zsansitalic-math from [zsansitalic-math.ssty1 zsansitalic-math.ssty2];
sub alphaitalic-math from [alphaitalic-math.ssty1 alphaitalic-math.ssty2];
sub betaitalic-math from [betaitalic-math.ssty1 betaitalic-math.ssty2];
sub gammaitalic-math from [gammaitalic-math.ssty1 gammaitalic-math.ssty2];
sub deltaitalic-math from [deltaitalic-math.ssty1 deltaitalic-math.ssty2];
sub epsilonitalic-math from [epsilonitalic-math.ssty1 epsilonitalic-math.ssty2];
sub zetaitalic-math from [zetaitalic-math.ssty1 zetaitalic-math.ssty2];
sub etaitalic-math from [etaitalic-math.ssty1 etaitalic-math.ssty2];
sub thetaitalic-math from [thetaitalic-math.ssty1 thetaitalic-math.ssty2];
sub iotaitalic-math from [iotaitalic-math.ssty1 iotaitalic-math.ssty2];
sub kappaitalic-math from [kappaitalic-math.ssty1 kappaitalic-math.ssty2];
sub lambdaitalic-math from [lambdaitalic-math.ssty1 lambdaitalic-math.ssty2];
sub muitalic-math from [muitalic-math.ssty1 muitalic-math.ssty2];
sub nuitalic-math from [nuitalic-math.ssty1 nuitalic-math.ssty2];
sub xiitalic-math from [xiitalic-math.ssty1 xiitalic-math.ssty2];
sub omicronitalic-math from [omicronitalic-math.ssty1 omicronitalic-math.ssty2];
sub piitalic-math from [piitalic-math.ssty1 piitalic-math.ssty2];
sub rhoitalic-math from [rhoitalic-math.ssty1 rhoitalic-math.ssty2];
sub sigmafinalitalic-math from [sigmafinalitalic-math.ssty1 sigmafinalitalic-math.ssty2];
sub sigmaitalic-math from [sigmaitalic-math.ssty1 sigmaitalic-math.ssty2];
sub tauitalic-math from [tauitalic-math.ssty1 tauitalic-math.ssty2];
sub upsilonitalic-math from [upsilonitalic-math.ssty1 upsilonitalic-math.ssty2];
sub phiitalic-math from [phiitalic-math.ssty1 phiitalic-math.ssty2];
sub chiitalic-math from [chiitalic-math.ssty1 chiitalic-math.ssty2];
sub psiitalic-math from [psiitalic-math.ssty1 psiitalic-math.ssty2];
sub omegaitalic-math from [omegaitalic-math.ssty1 omegaitalic-math.ssty2];
sub partialdiffitalic-math from [partialdiffitalic-math.ssty1 partialdiffitalic-math.ssty2];
sub epsilonLunateSymbolitalic-math from [epsilonLunateSymbolitalic-math.ssty1 epsilonLunateSymbolitalic-math.ssty2];
sub thetaSymbolitalic-math from [thetaSymbolitalic-math.ssty1 thetaSymbolitalic-math.ssty2];
sub kappaSymbolitalic-math from [kappaSymbolitalic-math.ssty1 kappaSymbolitalic-math.ssty2];
sub phiSymbolitalic-math from [phiSymbolitalic-math.ssty1 phiSymbolitalic-math.ssty2];
sub rhoSymbolitalic-math from [rhoSymbolitalic-math.ssty1 rhoSymbolitalic-math.ssty1];
sub piSymbolitalic-math from [piSymbolitalic-math.ssty1 piSymbolitalic-math.ssty2];
sub Ascript-math from [Ascript-math.ssty1 Ascript-math.ssty2];
sub Bscript from [Bscript.ssty1 Bscript.ssty2];
sub Cscript-math from [Cscript-math.ssty1 Cscript-math.ssty2];
sub Dscript-math from [Dscript-math.ssty1 Dscript-math.ssty2];
sub Escript from [Escript.ssty1 Escript.ssty2];
sub Fscript from [Fscript.ssty1 Fscript.ssty2];
sub Gscript-math from [Gscript-math.ssty1 Gscript-math.ssty2];
sub Hscript from [Hscript.ssty1 Hscript.ssty2];
sub Iscript from [Iscript.ssty1 Iscript.ssty2];
sub Jscript-math from [Jscript-math.ssty1 Jscript-math.ssty2];
sub Kscript-math from [Kscript-math.ssty1 Kscript-math.ssty2];
sub Lscript from [Lscript.ssty1 Lscript.ssty2];
sub Mscript from [Mscript.ssty1 Mscript.ssty2];
sub Nscript-math from [Nscript-math.ssty1 Nscript-math.ssty2];
sub Oscript-math from [Oscript-math.ssty1 Oscript-math.ssty2];
sub Pscript-math from [Pscript-math.ssty1 Pscript-math.ssty2];
sub Qscript-math from [Qscript-math.ssty1 Qscript-math.ssty2];
sub Rscript from [Rscript.ssty1 Rscript.ssty2];
sub Sscript-math from [Sscript-math.ssty1 Sscript-math.ssty2];
sub Tscript-math from [Tscript-math.ssty1 Tscript-math.ssty2];
sub Uscript-math from [Uscript-math.ssty1 Uscript-math.ssty2];
sub Vscript-math from [Vscript-math.ssty1 Vscript-math.ssty2];
sub Wscript-math from [Wscript-math.ssty1 Wscript-math.ssty2];
sub Xscript-math from [Xscript-math.ssty1 Xscript-math.ssty2];
sub Yscript-math from [Yscript-math.ssty1 Yscript-math.ssty2];
sub Zscript-math from [Zscript-math.ssty1 Zscript-math.ssty2];
sub ascript-math from [ascript-math.ssty1 ascript-math.ssty2];
sub bscript-math from [bscript-math.ssty1 bscript-math.ssty2];
sub cscript-math from [cscript-math.ssty1 cscript-math.ssty2];
sub dscript-math from [dscript-math.ssty1 dscript-math.ssty2];
sub escript from [escript.ssty1 escript.ssty2];
sub fscript-math from [fscript-math.ssty1 fscript-math.ssty2];
sub gscript from [gscript.ssty1 gscript.ssty2];
sub hscript-math from [hscript-math.ssty1 hscript-math.ssty2];
sub iscript-math from [iscript-math.ssty1 iscript-math.ssty2];
sub iscript-math.dtls from [iscript-math.dtls.ssty1 iscript-math.dtls.ssty2];
sub jscript-math from [jscript-math.ssty1 jscript-math.ssty2];
sub jscript-math.dtls from [jscript-math.dtls.ssty1 jscript-math.dtls.ssty2];
sub kscript-math from [kscript-math.ssty1 kscript-math.ssty2];
sub lscript-math from [lscript-math.ssty1 lscript-math.ssty2];
sub mscript-math from [mscript-math.ssty1 mscript-math.ssty2];
sub nscript-math from [nscript-math.ssty1 nscript-math.ssty2];
sub oscript from [oscript.ssty1 oscript.ssty2];
sub pscript-math from [pscript-math.ssty1 pscript-math.ssty2];
sub qscript-math from [qscript-math.ssty1 qscript-math.ssty2];
sub rscript-math from [rscript-math.ssty1 rscript-math.ssty2];
sub sscript-math from [sscript-math.ssty1 sscript-math.ssty2];
sub tscript-math from [tscript-math.ssty1 tscript-math.ssty2];
sub uscript-math from [uscript-math.ssty1 uscript-math.ssty2];
sub vscript-math from [vscript-math.ssty1 vscript-math.ssty2];
sub wscript-math from [wscript-math.ssty1 wscript-math.ssty2];
sub xscript-math from [xscript-math.ssty1 xscript-math.ssty2];
sub yscript-math from [yscript-math.ssty1 yscript-math.ssty2];
sub zscript-math from [zscript-math.ssty1 zscript-math.ssty2];
sub AdoubleStruck from [AdoubleStruck.ssty1 AdoubleStruck.ssty2];
sub BdoubleStruck from [BdoubleStruck.ssty1 BdoubleStruck.ssty2];
sub CdoubleStruck from [CdoubleStruck.ssty1 CdoubleStruck.ssty2];
sub DdoubleStruck from [DdoubleStruck.ssty1 DdoubleStruck.ssty2];
sub EdoubleStruck from [EdoubleStruck.ssty1 EdoubleStruck.ssty2];
sub FdoubleStruck from [FdoubleStruck.ssty1 FdoubleStruck.ssty2];
sub GdoubleStruck from [GdoubleStruck.ssty1 GdoubleStruck.ssty2];
sub HdoubleStruck from [HdoubleStruck.ssty1 HdoubleStruck.ssty2];
sub IdoubleStruck from [IdoubleStruck.ssty1 IdoubleStruck.ssty2];
sub JdoubleStruck from [JdoubleStruck.ssty1 JdoubleStruck.ssty2];
sub KdoubleStruck from [KdoubleStruck.ssty1 KdoubleStruck.ssty2];
sub LdoubleStruck from [LdoubleStruck.ssty1 LdoubleStruck.ssty2];
sub MdoubleStruck from [MdoubleStruck.ssty1 MdoubleStruck.ssty2];
sub NdoubleStruck from [NdoubleStruck.ssty1 NdoubleStruck.ssty2];
sub OdoubleStruck from [OdoubleStruck.ssty1 OdoubleStruck.ssty2];
sub PdoubleStruck from [PdoubleStruck.ssty1 PdoubleStruck.ssty2];
sub QdoubleStruck from [QdoubleStruck.ssty1 QdoubleStruck.ssty2];
sub RdoubleStruck from [RdoubleStruck.ssty1 RdoubleStruck.ssty2];
sub SdoubleStruck from [SdoubleStruck.ssty1 SdoubleStruck.ssty2];
sub TdoubleStruck from [TdoubleStruck.ssty1 TdoubleStruck.ssty2];
sub UdoubleStruck from [UdoubleStruck.ssty1 UdoubleStruck.ssty2];
sub VdoubleStruck from [VdoubleStruck.ssty1 VdoubleStruck.ssty2];
sub WdoubleStruck from [WdoubleStruck.ssty1 WdoubleStruck.ssty2];
sub XdoubleStruck from [XdoubleStruck.ssty1 XdoubleStruck.ssty2];
sub YdoubleStruck from [YdoubleStruck.ssty1 YdoubleStruck.ssty2];
sub ZdoubleStruck from [ZdoubleStruck.ssty1 ZdoubleStruck.ssty2];
sub adoubleStruck from [adoubleStruck.ssty1 adoubleStruck.ssty2];
sub bdoubleStruck from [bdoubleStruck.ssty1 bdoubleStruck.ssty2];
sub cdoubleStruck from [cdoubleStruck.ssty1 cdoubleStruck.ssty2];
sub ddoubleStruck from [ddoubleStruck.ssty1 ddoubleStruck.ssty2];
sub edoubleStruck from [edoubleStruck.ssty1 edoubleStruck.ssty2];
sub fdoubleStruck from [fdoubleStruck.ssty1 fdoubleStruck.ssty2];
sub gdoubleStruck from [gdoubleStruck.ssty1 gdoubleStruck.ssty2];
sub hdoubleStruck from [hdoubleStruck.ssty1 hdoubleStruck.ssty2];
sub idoubleStruck from [idoubleStruck.ssty1 idoubleStruck.ssty2];
sub idoubleStruck.dtls from [idoubleStruck.dtls.ssty1 idoubleStruck.dtls.ssty2];
sub jdoubleStruck from [jdoubleStruck.ssty1 jdoubleStruck.ssty2];
sub jdoubleStruck.dtls from [jdoubleStruck.dtls.ssty1 jdoubleStruck.dtls.ssty2];
sub kdoubleStruck from [kdoubleStruck.ssty1 kdoubleStruck.ssty2];
sub ldoubleStruck from [ldoubleStruck.ssty1 ldoubleStruck.ssty2];
sub mdoubleStruck from [mdoubleStruck.ssty1 mdoubleStruck.ssty2];
sub ndoubleStruck from [ndoubleStruck.ssty1 ndoubleStruck.ssty2];
sub odoubleStruck from [odoubleStruck.ssty1 odoubleStruck.ssty2];
sub pdoubleStruck from [pdoubleStruck.ssty1 pdoubleStruck.ssty2];
sub qdoubleStruck from [qdoubleStruck.ssty1 qdoubleStruck.ssty2];
sub rdoubleStruck from [rdoubleStruck.ssty1 rdoubleStruck.ssty2];
sub sdoubleStruck from [sdoubleStruck.ssty1 sdoubleStruck.ssty2];
sub tdoubleStruck from [tdoubleStruck.ssty1 tdoubleStruck.ssty2];
sub udoubleStruck from [udoubleStruck.ssty1 udoubleStruck.ssty2];
sub vdoubleStruck from [vdoubleStruck.ssty1 vdoubleStruck.ssty2];
sub wdoubleStruck from [wdoubleStruck.ssty1 wdoubleStruck.ssty2];
sub xdoubleStruck from [xdoubleStruck.ssty1 xdoubleStruck.ssty2];
sub ydoubleStruck from [ydoubleStruck.ssty1 ydoubleStruck.ssty2];
sub zdoubleStruck from [zdoubleStruck.ssty1 zdoubleStruck.ssty2];
sub iitalicDoubleStruck from [iitalicDoubleStruck.ssty1 iitalicDoubleStruck.ssty2];
sub iitalicDoubleStruck.dtls from [iitalicDoubleStruck.dtls.ssty1 iitalicDoubleStruck.dtls.ssty2];
sub jitalicDoubleStruck from [jitalicDoubleStruck.ssty1 jitalicDoubleStruck.ssty2];
sub jitalicDoubleStruck.dtls from [jitalicDoubleStruck.dtls.ssty1 jitalicDoubleStruck.dtls.ssty2];
sub planckconstantovertwopi from [planckconstantovertwopi.ssty1 planckconstantovertwopi.ssty2];
sub aeTurnedmod from [aeTurnedmod.ssty1 aeTurnedmod.ssty2];
sub zero from [zero.ssty1 zero.ssty2];
sub one from [one.ssty1 one.ssty2];
sub two from [two.ssty1 two.ssty2];
sub three from [three.ssty1 three.ssty2];
sub four from [four.ssty1 four.ssty2];
sub five from [five.ssty1 five.ssty2];
sub six from [six.ssty1 six.ssty2];
sub seven from [seven.ssty1 seven.ssty2];
sub eight from [eight.ssty1 eight.ssty2];
sub nine from [nine.ssty1 nine.ssty2];
sub zero.uv001 from [zero.uv001.ssty1 zero.uv001.ssty2];
sub bar from [bar.ssty1 bar.ssty2];
sub parenleft from [parenleft.ssty1 parenleft.ssty2];
sub parenright from [parenright.ssty1 parenright.ssty2];
sub bracketleft from [bracketleft.ssty1 bracketleft.ssty2];
sub bracketright from [bracketright.ssty1 bracketright.ssty2];
sub braceleft from [braceleft.ssty1 braceleft.ssty2];
sub braceright from [braceright.ssty1 braceright.ssty2];
sub leftanglebracket-math from [leftanglebracket-math.ssty1 leftanglebracket-math.ssty2];
sub rightanglebracket-math from [rightanglebracket-math.ssty1 rightanglebracket-math.ssty2];
sub period from [period.ssty1 period.ssty2];
sub comma from [comma.ssty1 comma.ssty2];
sub colon from [colon.ssty1 colon.ssty2];
sub semicolon from [semicolon.ssty1 semicolon.ssty2];
sub ellipsis from [ellipsis.ssty1 ellipsis.ssty2];
sub exclam from [exclam.ssty1 exclam.ssty2];
sub numbersign from [numbersign.ssty1 numbersign.ssty2];
sub slash from [slash.ssty1 slash.ssty2];
sub backslash from [backslash.ssty1 backslash.ssty2];
sub hyphen from [hyphen.ssty1 hyphen.ssty2];
sub quotedblleft from [quotedblleft.ssty1 quotedblleft.ssty2];
sub quotedblright from [quotedblright.ssty1 quotedblright.ssty2];
sub quoteleft from [quoteleft.ssty1 quoteleft.ssty2];
sub quoteright from [quoteright.ssty1 quoteright.ssty2];
sub natural-musical from [natural-musical.ssty1 natural-musical.ssty2];
sub sharp-musical from [sharp-musical.ssty1 sharp-musical.ssty2];
sub integral from [integral.ssty1 integral.ssty2];
sub summation from [summation.ssty1 summation.ssty2];
sub integral.ss02 from [integral.ss02.ssty1 integral.ss02.ssty2];
sub downtackmod from [downtackmod.ssty1 downtackmod.ssty2];
sub uptackmod from [uptackmod.ssty1 uptackmod.ssty2];
sub prime from [prime.ssty1 prime.ssty2];
sub doubleprime from [doubleprime.ssty1 doubleprime.ssty2];
sub tripleprime from [tripleprime.ssty1 tripleprime.ssty2];
sub quadrupleprime from [quadrupleprime.ssty1 quadrupleprime.ssty2];
sub primeReversed from [primeReversed.ssty1 primeReversed.ssty2];
sub doubleprimeReversed from [doubleprimeReversed.ssty1 doubleprimeReversed.ssty2];
sub tripleprimeReversed from [tripleprimeReversed.ssty1 tripleprimeReversed.ssty2];
sub radical from [radical.ssty1 radical.ssty2];
sub literSign from [literSign.ssty1 literSign.ssty2];
sub dagger from [dagger.ssty1 dagger.ssty2];
sub asteriskmath from [asteriskmath.ssty1 asteriskmath.ssty2];
sub bulletoperator from [bulletoperator.ssty1 bulletoperator.ssty2];
sub dotmath from [dotmath.ssty1 dotmath.ssty2];
sub element from [element.ssty1 element.ssty2];
sub greaterThanOrSlantedEqualTo from [greaterThanOrSlantedEqualTo.ssty1 greaterThanOrSlantedEqualTo.ssty2];
sub lessThanOrSlantedEqualTo from [lessThanOrSlantedEqualTo.ssty1 lessThanOrSlantedEqualTo.ssty2];
sub midlinehorizontalellipsis from [midlinehorizontalellipsis.ssty1 midlinehorizontalellipsis.ssty2];
sub minusplus from [minusplus.ssty1 minusplus.ssty2];
sub plus from [plus.ssty1 plus.ssty2];
sub minus from [minus.ssty1 minus.ssty2];
sub multiply from [multiply.ssty1 multiply.ssty2];
sub equal from [equal.ssty1 equal.ssty2];
sub notequal from [notequal.ssty1 notequal.ssty2];
sub greater from [greater.ssty1 greater.ssty2];
sub less from [less.ssty1 less.ssty2];
sub greaterequal from [greaterequal.ssty1 greaterequal.ssty2];
sub lessequal from [lessequal.ssty1 lessequal.ssty2];
sub plusminus from [plusminus.ssty1 plusminus.ssty2];
sub emptyset from [emptyset.ssty1 emptyset.ssty2];
sub infinity from [infinity.ssty1 infinity.ssty2];
sub logicaland from [logicaland.ssty1 logicaland.ssty2];
sub logicalor from [logicalor.ssty1 logicalor.ssty2];
sub intersection from [intersection.ssty1 intersection.ssty2];
sub union from [union.ssty1 union.ssty2];
sub ringoperator from [ringoperator.ssty1 ringoperator.ssty2];
sub setminus from [setminus.ssty1 setminus.ssty2];
sub similar from [similar.ssty1 similar.ssty2];
sub staroperator from [staroperator.ssty1 staroperator.ssty2];
sub subset from [subset.ssty1 subset.ssty2];
sub suchthat from [suchthat.ssty1 suchthat.ssty2];
sub superset from [superset.ssty1 superset.ssty2];
sub tackdown from [tackdown.ssty1 tackdown.ssty2];
sub uptack from [uptack.ssty1 uptack.ssty2];
sub multiply.circled from [multiply.circled.ssty1 multiply.circled.ssty2];
sub plus.circled from [plus.circled.ssty1 plus.circled.ssty2];
sub intersection.uv001 from [intersection.uv001.ssty1 intersection.uv001.ssty2];
sub union.uv001 from [union.uv001.ssty1 union.uv001.ssty2];
sub upArrow from [upArrow.ssty1 upArrow.ssty2];
sub rightArrow from [rightArrow.ssty1 rightArrow.ssty2];
sub downArrow from [downArrow.ssty1 downArrow.ssty2];
sub leftArrow from [leftArrow.ssty1 leftArrow.ssty2];
sub rightarrowabovecomb from [rightarrowabovecomb.ssty1 rightarrowabovecomb.ssty2];
";
notes = "Add to top, later, after generating feature:
script math;";
tag = ssty;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 1069;
},
{
name = typoDescender;
value = -423;
},
{
name = typoLineGap;
value = 0;
},
{
name = hheaAscender;
value = 1069;
},
{
name = hheaDescender;
value = -423;
},
{
name = winAscent;
value = 3105;
},
{
name = winDescent;
value = 2550;
},
{
name = underlineThickness;
value = 71;
},
{
name = underlinePosition;
value = -175;
}
);
guides = (
{
locked = 1;
name = ".s12 top";
pos = (0,2162);
},
{
locked = 1;
name = ".s12 bottom";
pos = (0,-1606);
},
{
locked = 1;
name = "bracket-base-regular";
pos = (0,-158);
},
{
angle = 180;
locked = 1;
name = "bracket-top-regular";
pos = (0,784);
},
{
locked = 1;
name = "bottom-brackets";
pos = (0,-60);
},
{
locked = 1;
name = AxisHeight;
pos = (0,278);
},
{
locked = 1;
name = "largeop top";
pos = (0,714);
},
{
locked = 1;
name = "largeop bottom";
pos = (0,-240);
},
{
locked = 1;
name = ".s20 top";
pos = (0,3104);
},
{
locked = 1;
name = ".s20 bottom";
pos = (0,-2548);
}
);
id = master01;
metricValues = (
{
over = 16;
pos = 1069;
},
{
over = 12;
pos = 714;
},
{
over = 11;
pos = 536;
},
{
over = -11;
},
{
over = -16;
pos = -423;
},
{
}
);
name = Regular;
stemValues = (
42,
42
);
userData = {
GSCornerRadius = 88;
GSOffsetHorizontal = 40;
GSOffsetKeepCompatible = 1;
GSOffsetMakeStroke = 1;
GSOffsetVertical = 41;
com.nagwa.MATHPlugin.constants = {
AccentBaseHeight = 556;
AxisHeight = 278;
DelimitedSubFormulaMinHeight = 2300;
DisplayOperatorMinHeight = 2300;
FlattenedAccentBaseHeight = 714;
FractionDenomDisplayStyleGapMin = 150;
FractionDenominatorDisplayStyleShiftDown = 673;
FractionDenominatorGapMin = 71;
FractionDenominatorShiftDown = 320;
FractionNumDisplayStyleGapMin = 150;
FractionNumeratorDisplayStyleShiftUp = 704;
FractionNumeratorGapMin = 71;
FractionNumeratorShiftUp = 529;
FractionRuleThickness = 71;
LowerLimitBaselineDropMin = 630;
LowerLimitGapMin = 100;
MathLeading = 150;
MinConnectorOverlap = 100;
OverbarExtraAscender = 71;
OverbarRuleThickness = 71;
OverbarVerticalGap = 150;
RadicalDegreeBottomRaisePercent = 56;
RadicalDisplayStyleVerticalGap = 190;
RadicalExtraAscender = 71;
RadicalKernAfterDegree = -450;
RadicalKernBeforeDegree = 51;
RadicalRuleThickness = 71;
RadicalVerticalGap = 89;
ScriptPercentScaleDown = 60;
ScriptScriptPercentScaleDown = 50;
SkewedFractionHorizontalGap = 350;
SkewedFractionVerticalGap = 71;
SpaceAfterScript = 40;
StackBottomDisplayStyleShiftDown = 673;
StackBottomShiftDown = 320;
StackDisplayStyleGapMin = 336;
StackGapMin = 178;
StackTopDisplayStyleShiftUp = 704;
StackTopShiftUp = 529;
StretchStackBottomShiftDown = 559;
StretchStackGapAboveMin = 100;
StretchStackGapBelowMin = 100;
StretchStackTopShiftUp = 244;
SubSuperscriptGapMin = 160;
SubscriptBaselineDropMin = 140;
SubscriptShiftDown = 210;
SubscriptTopMax = 430;
SuperscriptBaselineDropMax = 240;
SuperscriptBottomMaxWithSubscript = 430;
SuperscriptBottomMin = 134;
SuperscriptShiftUp = 390;
SuperscriptShiftUpCramped = 280;
UnderbarExtraDescender = 71;
UnderbarRuleThickness = 71;
UnderbarVerticalGap = 150;
UpperLimitBaselineRiseMin = 244;
UpperLimitGapMin = 100;
};
};
visible = 1;
}
);
instances = (
{
instanceInterpolations = {
master01 = 1;
};
name = Regular;
properties = (
{
key = styleMapFamilyName;
value = "Noto Sans Math";
}
);
}
);
kerningLTR = {
master01 = {
prime = {
prime = -62;
};
prime.ssty1 = {
prime.ssty1 = -74;
};
prime.ssty2 = {
prime.ssty2 = -65;
};
primeReversed = {
primeReversed = -62;
};
primeReversed.ssty1 = {
primeReversed.ssty1 = -74;
};
primeReversed.ssty2 = {
primeReversed.ssty2 = -65;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = dflt;
value = "Copyright 2022 Google LLC. All Rights Reserved.";
}
);
},
{
key = designers;
values = (
{
language = dflt;
value = "Monotype Design Team, Delve Withrington, Jeff Kellem";
}
);
},
{
key = designerURL;
value = "http://www.monotype.com/studio";
},
{
key = licenses;
values = (
{
language = dflt;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://openfontlicense.org";
}
);
},
{
key = licenseURL;
value = "https://openfontlicense.org";
},
{
key = manufacturers;
values = (
{
language = dflt;
value = "Monotype Imaging Inc., Delve Fonts LLC";
}
);
},
{
key = manufacturerURL;
value = "http://www.google.com/get/noto/";
},
{
key = trademarks;
values = (
{
language = dflt;
value = "Noto is a trademark of Google Inc.";
}
);
},
{
key = vendorID;
value = GOOG;
}
);
stems = (
{
name = vStem0;
},
{
horizontal = 1;
name = hStem0;
}
);
unitsPerEm = 1000;
versionMajor = 3;
versionMinor = 0;
}
